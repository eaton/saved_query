<?php

use Drupal\Core\Entity\FieldableEntityInterface;
use Drupal\Core\Field\FieldDefinitionInterface;

/**
 * @file
 * Contains saved_query.module.
 */

/**
 * Finds a list of entities with saved_query_fields scheduled for refresh.
 * @return array
 */
function saved_query_find_candidates() {
  $results = [];

  $field_map = \Drupal::entityManager()->getFieldMap();
  foreach ($field_map as $entity_type_id => $field) {
    foreach ($field as $field_name => $info) {
      if ($info['type'] == 'saved_query_field') {

        $table = $entity_type_id . '__' . $field_name;
        $ids = db_query(
          "SELECT entity_id FROM {$table} t " .
          "WHERE t." .$field_name. "_refreshed < (:now - t." .$field_name. "_interval) " .
          "AND t." .$field_name. "_interval > 0 AND t.deleted = 0;",
            array(':now' => time())
        );

        if ($ids) {
          $results[$entity_type_id][$field_name] = $ids->fetchCol();
        }
      }
    }
  }
  return $results;
}


/**
 * Given an entity type, field, and a set of IDs, run the reference updater
 * for each entity.
 *
 * @param string $entity_type
 * @param string $field
 * @param array $ids
 */
function saved_query_update_references($entity_type_id, $field_name, $ids) {
  $manager = \Drupal::entityManager()->getStorage($entity_type_id);
  $entities = $manager->loadMultiple($ids);
  foreach ($entities as $entity) {
    saved_query_update_single_entity($entity, $field_name);
  }
}

/**
 * Do the actual work of loading a query from the saved_query_field, running it,
 * and updating the destination entity_reference field with the results.
 *
 * @param \Drupal\Core\Entity\FieldableEntityInterface $entity
 * @param string $field
 */
function saved_query_update_single_entity(FieldableEntityInterface $entity, $field) {
  if ($entity->hasField($field)) {
    $query_field = $entity->get($field)[0];
    $target_field = $entity->getFieldDefinition($field)->getSetting('target_field');

    if ($entity->hasField($target_field) && ($query = $query_field->getQuery())) {
      $ids = $query->execute();
      $references = [];

      foreach ($ids as $id) {
        $references[] = ['target_id' => $id];
      }

      if ($references) {
        $entity->set($target_field, $references);
        $entity->{$field}->refreshed = time();
        $entity->{$field}->refresh_now = FALSE;

        $entity->save();
      }
    }
  }
}

function saved_query_cron() {
  // TODO: Move to a queue
  $data = saved_query_find_candidates();
  foreach ($data as $entity_type_id => $fields) {
    foreach ($fields as $field_name => $ids) {
      saved_query_update_references($entity_type_id, $field_name, $ids);
    }
  }
}
